var AnimatedScene;(()=>{"use strict";var e={631:()=>{HTMLElement.prototype.removeAllChildren=function(){for(;this.hasChildNodes();)this.firstChild&&this.removeChild(this.firstChild)},HTMLElement.prototype.makeCover=function(){this.style.display="flex",this.style.width="100%",this.style.height="100%",this.style.position="absolute",this.style.top="0",this.style.left="0"}},930:(e,t,n)=>{n.d(t,{Layer:()=>s}),n(631),n(936);class s{element;priority;backgroundStyle;backgroundImage;filter;classList;cursor;onClick;onMouseOver;onMouseDown;onMouseUp;constructor({priority:e,backgroundStyle:t,backgroundImage:n,filter:i,cursor:r,onClick:o,onMouseOver:a,onMouseDown:l,onMouseUp:h,classList:c}){this.priority=e,this.filter=i,this.backgroundStyle=t,this.backgroundImage=n,this.cursor=r,this.classList=c,this.onClick=o,this.onMouseOver=a,this.onMouseDown=l,this.onMouseUp=h,this.element=s.getLayerElement(this,this.priority,this.classList,this.backgroundStyle,this.backgroundImage,this.filter,this.cursor,this.onClick,this.onMouseOver,this.onMouseDown,this.onMouseUp)}setParent(e){if(e.insertAdjacentElement("beforeend",this.element),this.element.parentElement&&this.element.parentElement.id){const e=this.element.parentElement.id,t=this.element.parentElement.getElementsByClassName("layer").length-1;this.element.id=`layer${t}${e.capitalizeFirstLetter()}`}}setAsMainLayer(e){if(e.insertAdjacentElement("beforeend",this.element),this.element.parentElement&&this.element.parentElement.id){const e=this.element.parentElement.id;this.element.id=`mainLayer${e.capitalizeFirstLetter()}`}}static getLayerElement(e,t,n,s,i,r,o,a,l,h,c){const m=document.createElement("div");return m.classList.add(...n||[]),m.classList.add("layer"),m.makeCover(),m.style.zIndex=t>0?t.toString():"0",s&&(m.style.background=s),r&&(m.style.filter=r),o&&(m.style.cursor=o),a&&m.addEventListener("click",(()=>{a(e)})),l&&m.addEventListener("mouseover",(()=>{l(e)})),h&&m.addEventListener("mousedown",(()=>{h(e)})),c&&m.addEventListener("mouseup",(()=>{c(e)})),i&&this.setLayerBackgroundImage(m,i),m}static setLayerBackgroundImage(e,t){const n=document.createElement("img");n.src=t,n.style.userSelect="none",n.style.maxWidth="100%",n.style.height="auto",n.makeCover(),e.insertAdjacentElement("afterbegin",n)}}},931:(e,t,n)=>{n.d(t,{Scene:()=>i});var s=n(930);class i{container;element;layers;components;mainLayer;mainLayerConfig;constructor({container:e,layers:t,components:n,mainLayerConfig:s}){this.container=e,this.mainLayerConfig=s,this.layers=t,this.components=n||[],this.element=document.createElement("div"),this.components.forEach((e=>this.element.insertAdjacentElement("beforeend",e.container)))}async build(){this.container.classList.add("scene-container"),this.element.classList.add("scene"),this.setupLayers(),this.setElementStyle(),this.container.insertAdjacentElement("beforeend",this.element),this.components.forEach((async e=>await e.build(this)))}getMainLayer(){}get sceneCounter(){return this.container.querySelectorAll(`#${this.container.id} > .scene`).length}setupLayers(){this.container.id?this.element.id=`${this.container.id}${this.sceneCounter}`:(this.container.id=`sceneContainer${this.container.getElementsByClassName("scene-container").length}`,this.element.id=`scene${this.sceneCounter}`),this.layers.forEach((e=>{e.setParent(this.element)})),this.mainLayerConfig?(this.mainLayer=new s.Layer({...this.mainLayerConfig,priority:999}),this.mainLayer.setAsMainLayer(this.element)):(this.mainLayer=new s.Layer({priority:999}),this.mainLayer.setAsMainLayer(this.element))}setElementStyle(){this.container.style.position="relative",this.container.style.flexWrap="wrap",this.element.style.position="relative",this.element.style.display="flex",this.element.style.width="100vw",this.element.style.height="100vh",this.element.style.left="0",this.element.style.top="0",this.element.style.overflow="hidden"}}},936:()=>{String.prototype.isNullOrEmpty=function(){return"string"!=typeof this&&!this&&""!==this},String.prototype.truncate=function(e,t="..."){return(this.length>e?this.substring(0,e)+t:this).toString()},String.prototype.removeAccents=function(){return this.normalize("NFD").replace(/[\u0300-\u036f]/g,"")},String.prototype.capitalizeFirstLetter=function(){return"string"!=typeof this?"":this.charAt(0).toUpperCase()+this.substring(1)},String.prototype.zeroBefore=function(){return this.padStart(2,"0")}}},t={};function n(s){var i=t[s];if(void 0!==i)return i.exports;var r=t[s]={exports:{}};return e[s](r,r.exports,n),r.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var s in t)n.o(t,s)&&!n.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var s={};(()=>{n.r(s),n.d(s,{AnimatedScene:()=>t});var e=n(931);class t extends e.Scene{constructor(e){super(e)}}})(),AnimatedScene=s})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,