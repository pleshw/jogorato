var DialogComponent;(()=>{"use strict";var t={813:(t,n,e)=>{e.d(n,{Component:()=>a});var r=e(676);class a{position;container;fadeInAnimation;fadeOutAnimation;constructor(t,n,e,r){this.container=t,this.fadeInAnimation=e,this.fadeOutAnimation=r,n&&this.setupPosition(n)}async build(t){t&&t.mainLayer&&t.mainLayer.element.insertAdjacentElement("beforeend",this.container),this.container.style.display="flex",this.fadeInAnimation&&await this.fadeInAnimation.animate(this)}setupPosition(t){this.position=t,this.container.style.position="absolute",this.container.style.display="none",this.container.style.left=t.horizontal,t.verticalReference===r.VERTICAL_REFERENCE.FROM_TOP?this.container.style.top=t.vertical:this.container.style.bottom=t.vertical}async destroy(){this.fadeOutAnimation&&await this.fadeOutAnimation.animate(this),this.container.style.display="none"}}},676:(t,n,e)=>{var r,a,i,o;e.d(n,{VERTICAL_REFERENCE:()=>i}),function(t){t[t.PIXEL=0]="PIXEL",t[t.PERCENTAGE=1]="PERCENTAGE"}(r||(r={})),function(t){t[t.HORIZONTAL=0]="HORIZONTAL",t[t.VERTICAL=1]="VERTICAL"}(a||(a={})),function(t){t[t.FROM_TOP=0]="FROM_TOP",t[t.FROM_BOTTOM=1]="FROM_BOTTOM"}(i||(i={})),function(t){t[t.R=0]="R",t[t.G=1]="G",t[t.B=2]="B",t[t.A=3]="A"}(o||(o={}))}},n={};function e(r){var a=n[r];if(void 0!==a)return a.exports;var i=n[r]={exports:{}};return t[r](i,i.exports,e),i.exports}e.d=(t,n)=>{for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},e.o=(t,n)=>Object.prototype.hasOwnProperty.call(t,n),e.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var r={};(()=>{e.r(r),e.d(r,{DialogComponent:()=>it});var t={update:null,begin:null,loopBegin:null,changeBegin:null,change:null,changeComplete:null,loopComplete:null,complete:null,loop:1,direction:"normal",autoplay:!0,timelineOffset:0},n={duration:1e3,delay:0,endDelay:0,easing:"easeOutElastic(1, .5)",round:0},a=["translateX","translateY","translateZ","rotate","rotateX","rotateY","rotateZ","scale","scaleX","scaleY","scaleZ","skew","skewX","skewY","perspective","matrix","matrix3d"],i={CSS:{},springs:{}};function o(t,n,e){return Math.min(Math.max(t,n),e)}function u(t,n){return t.indexOf(n)>-1}function s(t,n){return t.apply(null,n)}var c={arr:function(t){return Array.isArray(t)},obj:function(t){return u(Object.prototype.toString.call(t),"Object")},pth:function(t){return c.obj(t)&&t.hasOwnProperty("totalLength")},svg:function(t){return t instanceof SVGElement},inp:function(t){return t instanceof HTMLInputElement},dom:function(t){return t.nodeType||c.svg(t)},str:function(t){return"string"==typeof t},fnc:function(t){return"function"==typeof t},und:function(t){return void 0===t},nil:function(t){return c.und(t)||null===t},hex:function(t){return/(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(t)},rgb:function(t){return/^rgb/.test(t)},hsl:function(t){return/^hsl/.test(t)},col:function(t){return c.hex(t)||c.rgb(t)||c.hsl(t)},key:function(e){return!t.hasOwnProperty(e)&&!n.hasOwnProperty(e)&&"targets"!==e&&"keyframes"!==e}};function l(t){var n=/\(([^)]+)\)/.exec(t);return n?n[1].split(",").map((function(t){return parseFloat(t)})):[]}function f(t,n){var e=l(t),r=o(c.und(e[0])?1:e[0],.1,100),a=o(c.und(e[1])?100:e[1],.1,100),u=o(c.und(e[2])?10:e[2],.1,100),s=o(c.und(e[3])?0:e[3],.1,100),f=Math.sqrt(a/r),d=u/(2*Math.sqrt(a*r)),p=d<1?f*Math.sqrt(1-d*d):0,h=d<1?(d*f-s)/p:-s+f;function m(t){var e=n?n*t/1e3:t;return e=d<1?Math.exp(-e*d*f)*(1*Math.cos(p*e)+h*Math.sin(p*e)):(1+h*e)*Math.exp(-e*f),0===t||1===t?t:1-e}return n?m:function(){var n=i.springs[t];if(n)return n;for(var e=1/6,r=0,a=0;;)if(1===m(r+=e)){if(++a>=16)break}else a=0;var o=r*e*1e3;return i.springs[t]=o,o}}function d(t){return void 0===t&&(t=10),function(n){return Math.ceil(o(n,1e-6,1)*t)*(1/t)}}var p,h,m=function(){var t=.1;function n(t,n){return 1-3*n+3*t}function e(t,n){return 3*n-6*t}function r(t){return 3*t}function a(t,a,i){return((n(a,i)*t+e(a,i))*t+r(a))*t}function i(t,a,i){return 3*n(a,i)*t*t+2*e(a,i)*t+r(a)}return function(n,e,r,o){if(0<=n&&n<=1&&0<=r&&r<=1){var u=new Float32Array(11);if(n!==e||r!==o)for(var s=0;s<11;++s)u[s]=a(s*t,n,r);return function(s){return n===e&&r===o||0===s||1===s?s:a(function(e){for(var o=0,s=1;10!==s&&u[s]<=e;++s)o+=t;--s;var c=o+(e-u[s])/(u[s+1]-u[s])*t,l=i(c,n,r);return l>=.001?function(t,n,e,r){for(var o=0;o<4;++o){var u=i(n,e,r);if(0===u)return n;n-=(a(n,e,r)-t)/u}return n}(e,c,n,r):0===l?c:function(t,n,e,r,i){var o,u,s=0;do{(o=a(u=n+(e-n)/2,r,i)-t)>0?e=u:n=u}while(Math.abs(o)>1e-7&&++s<10);return u}(e,o,o+t,n,r)}(s),e,o)}}}}(),v=(p={linear:function(){return function(t){return t}}},h={Sine:function(){return function(t){return 1-Math.cos(t*Math.PI/2)}},Circ:function(){return function(t){return 1-Math.sqrt(1-t*t)}},Back:function(){return function(t){return t*t*(3*t-2)}},Bounce:function(){return function(t){for(var n,e=4;t<((n=Math.pow(2,--e))-1)/11;);return 1/Math.pow(4,3-e)-7.5625*Math.pow((3*n-2)/22-t,2)}},Elastic:function(t,n){void 0===t&&(t=1),void 0===n&&(n=.5);var e=o(t,1,10),r=o(n,.1,2);return function(t){return 0===t||1===t?t:-e*Math.pow(2,10*(t-1))*Math.sin((t-1-r/(2*Math.PI)*Math.asin(1/e))*(2*Math.PI)/r)}}},["Quad","Cubic","Quart","Quint","Expo"].forEach((function(t,n){h[t]=function(){return function(t){return Math.pow(t,n+2)}}})),Object.keys(h).forEach((function(t){var n=h[t];p["easeIn"+t]=n,p["easeOut"+t]=function(t,e){return function(r){return 1-n(t,e)(1-r)}},p["easeInOut"+t]=function(t,e){return function(r){return r<.5?n(t,e)(2*r)/2:1-n(t,e)(-2*r+2)/2}},p["easeOutIn"+t]=function(t,e){return function(r){return r<.5?(1-n(t,e)(1-2*r))/2:(n(t,e)(2*r-1)+1)/2}}})),p);function g(t,n){if(c.fnc(t))return t;var e=t.split("(")[0],r=v[e],a=l(t);switch(e){case"spring":return f(t,n);case"cubicBezier":return s(m,a);case"steps":return s(d,a);default:return s(r,a)}}function y(t){try{return document.querySelectorAll(t)}catch(t){return}}function b(t,n){for(var e=t.length,r=arguments.length>=2?arguments[1]:void 0,a=[],i=0;i<e;i++)if(i in t){var o=t[i];n.call(r,o,i,t)&&a.push(o)}return a}function x(t){return t.reduce((function(t,n){return t.concat(c.arr(n)?x(n):n)}),[])}function M(t){return c.arr(t)?t:(c.str(t)&&(t=y(t)||t),t instanceof NodeList||t instanceof HTMLCollection?[].slice.call(t):[t])}function w(t,n){return t.some((function(t){return t===n}))}function O(t){var n={};for(var e in t)n[e]=t[e];return n}function E(t,n){var e=O(t);for(var r in t)e[r]=n.hasOwnProperty(r)?n[r]:t[r];return e}function T(t,n){var e=O(t);for(var r in n)e[r]=c.und(t[r])?n[r]:t[r];return e}function A(t){var n=/[+-]?\d*\.?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?(%|px|pt|em|rem|in|cm|mm|ex|ch|pc|vw|vh|vmin|vmax|deg|rad|turn)?$/.exec(t);if(n)return n[1]}function I(t,n){return c.fnc(t)?t(n.target,n.id,n.total):t}function C(t,n){return t.getAttribute(n)}function P(t,n,e){if(w([e,"deg","rad","turn"],A(n)))return n;var r=i.CSS[n+e];if(!c.und(r))return r;var a=document.createElement(t.tagName),o=t.parentNode&&t.parentNode!==document?t.parentNode:document.body;o.appendChild(a),a.style.position="absolute",a.style.width=100+e;var u=100/a.offsetWidth;o.removeChild(a);var s=u*parseFloat(n);return i.CSS[n+e]=s,s}function S(t,n,e){if(n in t.style){var r=n.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase(),a=t.style[n]||getComputedStyle(t).getPropertyValue(r)||"0";return e?P(t,a,e):a}}function D(t,n){return c.dom(t)&&!c.inp(t)&&(!c.nil(C(t,n))||c.svg(t)&&t[n])?"attribute":c.dom(t)&&w(a,n)?"transform":c.dom(t)&&"transform"!==n&&S(t,n)?"css":null!=t[n]?"object":void 0}function k(t){if(c.dom(t)){for(var n,e=t.style.transform||"",r=/(\w+)\(([^)]*)\)/g,a=new Map;n=r.exec(e);)a.set(n[1],n[2]);return a}}function B(t,n,e,r){switch(D(t,n)){case"transform":return function(t,n,e,r){var a=u(n,"scale")?1:0+function(t){return u(t,"translate")||"perspective"===t?"px":u(t,"rotate")||u(t,"skew")?"deg":void 0}(n),i=k(t).get(n)||a;return e&&(e.transforms.list.set(n,i),e.transforms.last=n),r?P(t,i,r):i}(t,n,r,e);case"css":return S(t,n,e);case"attribute":return C(t,n);default:return t[n]||0}}function F(t,n){var e=/^(\*=|\+=|-=)/.exec(t);if(!e)return t;var r=A(t)||0,a=parseFloat(n),i=parseFloat(t.replace(e[0],""));switch(e[0][0]){case"+":return a+i+r;case"-":return a-i+r;case"*":return a*i+r}}function L(t,n){if(c.col(t))return function(t){return c.rgb(t)?(e=/rgb\((\d+,\s*[\d]+,\s*[\d]+)\)/g.exec(n=t))?"rgba("+e[1]+",1)":n:c.hex(t)?function(t){var n=t.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i,(function(t,n,e,r){return n+n+e+e+r+r})),e=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(n);return"rgba("+parseInt(e[1],16)+","+parseInt(e[2],16)+","+parseInt(e[3],16)+",1)"}(t):c.hsl(t)?function(t){var n,e,r,a=/hsl\((\d+),\s*([\d.]+)%,\s*([\d.]+)%\)/g.exec(t)||/hsla\((\d+),\s*([\d.]+)%,\s*([\d.]+)%,\s*([\d.]+)\)/g.exec(t),i=parseInt(a[1],10)/360,o=parseInt(a[2],10)/100,u=parseInt(a[3],10)/100,s=a[4]||1;function c(t,n,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?t+6*(n-t)*e:e<.5?n:e<2/3?t+(n-t)*(2/3-e)*6:t}if(0==o)n=e=r=u;else{var l=u<.5?u*(1+o):u+o-u*o,f=2*u-l;n=c(f,l,i+1/3),e=c(f,l,i),r=c(f,l,i-1/3)}return"rgba("+255*n+","+255*e+","+255*r+","+s+")"}(t):void 0;var n,e}(t);if(/\s/g.test(t))return t;var e=A(t),r=e?t.substr(0,t.length-e.length):t;return n?r+n:r}function R(t,n){return Math.sqrt(Math.pow(n.x-t.x,2)+Math.pow(n.y-t.y,2))}function N(t){for(var n,e=t.points,r=0,a=0;a<e.numberOfItems;a++){var i=e.getItem(a);a>0&&(r+=R(n,i)),n=i}return r}function j(t){if(t.getTotalLength)return t.getTotalLength();switch(t.tagName.toLowerCase()){case"circle":return function(t){return 2*Math.PI*C(t,"r")}(t);case"rect":return function(t){return 2*C(t,"width")+2*C(t,"height")}(t);case"line":return function(t){return R({x:C(t,"x1"),y:C(t,"y1")},{x:C(t,"x2"),y:C(t,"y2")})}(t);case"polyline":return N(t);case"polygon":return function(t){var n=t.points;return N(t)+R(n.getItem(n.numberOfItems-1),n.getItem(0))}(t)}}function V(t,n){var e=n||{},r=e.el||function(t){for(var n=t.parentNode;c.svg(n)&&c.svg(n.parentNode);)n=n.parentNode;return n}(t),a=r.getBoundingClientRect(),i=C(r,"viewBox"),o=a.width,u=a.height,s=e.viewBox||(i?i.split(" "):[0,0,o,u]);return{el:r,viewBox:s,x:s[0]/1,y:s[1]/1,w:o,h:u,vW:s[2],vH:s[3]}}function _(t,n,e){function r(e){void 0===e&&(e=0);var r=n+e>=1?n+e:0;return t.el.getPointAtLength(r)}var a=V(t.el,t.svg),i=r(),o=r(-1),u=r(1),s=e?1:a.w/a.vW,c=e?1:a.h/a.vH;switch(t.property){case"x":return(i.x-a.x)*s;case"y":return(i.y-a.y)*c;case"angle":return 180*Math.atan2(u.y-o.y,u.x-o.x)/Math.PI}}function q(t,n){var e=/[+-]?\d*\.?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?/g,r=L(c.pth(t)?t.totalLength:t,n)+"";return{original:r,numbers:r.match(e)?r.match(e).map(Number):[0],strings:c.str(t)||n?r.split(e):[]}}function H(t){return b(t?x(c.arr(t)?t.map(M):M(t)):[],(function(t,n,e){return e.indexOf(t)===n}))}function Q(t){var n=H(t);return n.map((function(t,e){return{target:t,id:e,total:n.length,transforms:{list:k(t)}}}))}function G(t,n){var e=O(n);if(/^spring/.test(e.easing)&&(e.duration=f(e.easing)),c.arr(t)){var r=t.length;2!==r||c.obj(t[0])?c.fnc(n.duration)||(e.duration=n.duration/r):t={value:t}}var a=c.arr(t)?t:[t];return a.map((function(t,e){var r=c.obj(t)&&!c.pth(t)?t:{value:t};return c.und(r.delay)&&(r.delay=e?0:n.delay),c.und(r.endDelay)&&(r.endDelay=e===a.length-1?n.endDelay:0),r})).map((function(t){return T(t,e)}))}var W={css:function(t,n,e){return t.style[n]=e},attribute:function(t,n,e){return t.setAttribute(n,e)},object:function(t,n,e){return t[n]=e},transform:function(t,n,e,r,a){if(r.list.set(n,e),n===r.last||a){var i="";r.list.forEach((function(t,n){i+=n+"("+t+") "})),t.style.transform=i}}};function X(t,n){Q(t).forEach((function(t){for(var e in n){var r=I(n[e],t),a=t.target,i=A(r),o=B(a,e,i,t),u=F(L(r,i||A(o)),o),s=D(a,e);W[s](a,e,u,t.transforms,!0)}}))}function Z(t,n){return b(x(t.map((function(t){return n.map((function(n){return function(t,n){var e=D(t.target,n.name);if(e){var r=function(t,n){var e;return t.tweens.map((function(r){var a=function(t,n){var e={};for(var r in t){var a=I(t[r],n);c.arr(a)&&1===(a=a.map((function(t){return I(t,n)}))).length&&(a=a[0]),e[r]=a}return e.duration=parseFloat(e.duration),e.delay=parseFloat(e.delay),e}(r,n),i=a.value,o=c.arr(i)?i[1]:i,u=A(o),s=B(n.target,t.name,u,n),l=e?e.to.original:s,f=c.arr(i)?i[0]:l,d=A(f)||A(s),p=u||d;return c.und(o)&&(o=l),a.from=q(f,p),a.to=q(F(o,f),p),a.start=e?e.end:0,a.end=a.start+a.delay+a.duration+a.endDelay,a.easing=g(a.easing,a.duration),a.isPath=c.pth(i),a.isPathTargetInsideSVG=a.isPath&&c.svg(n.target),a.isColor=c.col(a.from.original),a.isColor&&(a.round=1),e=a,a}))}(n,t),a=r[r.length-1];return{type:e,property:n.name,animatable:t,tweens:r,duration:a.end,delay:r[0].delay,endDelay:a.endDelay}}}(t,n)}))}))),(function(t){return!c.und(t)}))}function Y(t,n){var e=t.length,r=function(t){return t.timelineOffset?t.timelineOffset:0},a={};return a.duration=e?Math.max.apply(Math,t.map((function(t){return r(t)+t.duration}))):n.duration,a.delay=e?Math.min.apply(Math,t.map((function(t){return r(t)+t.delay}))):n.delay,a.endDelay=e?a.duration-Math.max.apply(Math,t.map((function(t){return r(t)+t.duration-t.endDelay}))):n.endDelay,a}var z=0,J=[],K=function(){var t;function n(e){for(var r=J.length,a=0;a<r;){var i=J[a];i.paused?(J.splice(a,1),r--):(i.tick(e),a++)}t=a>0?requestAnimationFrame(n):void 0}return"undefined"!=typeof document&&document.addEventListener("visibilitychange",(function(){tt.suspendWhenDocumentHidden&&(U()?t=cancelAnimationFrame(t):(J.forEach((function(t){return t._onDocumentVisibility()})),K()))})),function(){t||U()&&tt.suspendWhenDocumentHidden||!(J.length>0)||(t=requestAnimationFrame(n))}}();function U(){return!!document&&document.hidden}function tt(e){void 0===e&&(e={});var r,a=0,i=0,u=0,s=0,l=null;function f(t){var n=window.Promise&&new Promise((function(t){return l=t}));return t.finished=n,n}var d=function(e){var r=E(t,e),a=E(n,e),i=function(t,n){var e=[],r=n.keyframes;for(var a in r&&(n=T(function(t){for(var n=b(x(t.map((function(t){return Object.keys(t)}))),(function(t){return c.key(t)})).reduce((function(t,n){return t.indexOf(n)<0&&t.push(n),t}),[]),e={},r=function(r){var a=n[r];e[a]=t.map((function(t){var n={};for(var e in t)c.key(e)?e==a&&(n.value=t[e]):n[e]=t[e];return n}))},a=0;a<n.length;a++)r(a);return e}(r),n)),n)c.key(a)&&e.push({name:a,tweens:G(n[a],t)});return e}(a,e),o=Q(e.targets),u=Z(o,i),s=Y(u,a),l=z;return z++,T(r,{id:l,children:[],animatables:o,animations:u,duration:s.duration,delay:s.delay,endDelay:s.endDelay})}(e);function p(){var t=d.direction;"alternate"!==t&&(d.direction="normal"!==t?"normal":"reverse"),d.reversed=!d.reversed,r.forEach((function(t){return t.reversed=d.reversed}))}function h(t){return d.reversed?d.duration-t:t}function m(){a=0,i=h(d.currentTime)*(1/tt.speed)}function v(t,n){n&&n.seek(t-n.timelineOffset)}function g(t){for(var n=0,e=d.animations,r=e.length;n<r;){var a=e[n],i=a.animatable,u=a.tweens,s=u.length-1,c=u[s];s&&(c=b(u,(function(n){return t<n.end}))[0]||c);for(var l=o(t-c.start-c.delay,0,c.duration)/c.duration,f=isNaN(l)?1:c.easing(l),p=c.to.strings,h=c.round,m=[],v=c.to.numbers.length,g=void 0,y=0;y<v;y++){var x=void 0,M=c.to.numbers[y],w=c.from.numbers[y]||0;x=c.isPath?_(c.value,f*M,c.isPathTargetInsideSVG):w+f*(M-w),h&&(c.isColor&&y>2||(x=Math.round(x*h)/h)),m.push(x)}var O=p.length;if(O){g=p[0];for(var E=0;E<O;E++){p[E];var T=p[E+1],A=m[E];isNaN(A)||(g+=T?A+T:A+" ")}}else g=m[0];W[a.type](i.target,a.property,g,i.transforms),a.currentValue=g,n++}}function y(t){d[t]&&!d.passThrough&&d[t](d)}function M(t){var n=d.duration,e=d.delay,c=n-d.endDelay,m=h(t);d.progress=o(m/n*100,0,100),d.reversePlayback=m<d.currentTime,r&&function(t){if(d.reversePlayback)for(var n=s;n--;)v(t,r[n]);else for(var e=0;e<s;e++)v(t,r[e])}(m),!d.began&&d.currentTime>0&&(d.began=!0,y("begin")),!d.loopBegan&&d.currentTime>0&&(d.loopBegan=!0,y("loopBegin")),m<=e&&0!==d.currentTime&&g(0),(m>=c&&d.currentTime!==n||!n)&&g(n),m>e&&m<c?(d.changeBegan||(d.changeBegan=!0,d.changeCompleted=!1,y("changeBegin")),y("change"),g(m)):d.changeBegan&&(d.changeCompleted=!0,d.changeBegan=!1,y("changeComplete")),d.currentTime=o(m,0,n),d.began&&y("update"),t>=n&&(i=0,d.remaining&&!0!==d.remaining&&d.remaining--,d.remaining?(a=u,y("loopComplete"),d.loopBegan=!1,"alternate"===d.direction&&p()):(d.paused=!0,d.completed||(d.completed=!0,y("loopComplete"),y("complete"),!d.passThrough&&"Promise"in window&&(l(),f(d)))))}return f(d),d.reset=function(){var t=d.direction;d.passThrough=!1,d.currentTime=0,d.progress=0,d.paused=!0,d.began=!1,d.loopBegan=!1,d.changeBegan=!1,d.completed=!1,d.changeCompleted=!1,d.reversePlayback=!1,d.reversed="reverse"===t,d.remaining=d.loop,r=d.children;for(var n=s=r.length;n--;)d.children[n].reset();(d.reversed&&!0!==d.loop||"alternate"===t&&1===d.loop)&&d.remaining++,g(d.reversed?d.duration:0)},d._onDocumentVisibility=m,d.set=function(t,n){return X(t,n),d},d.tick=function(t){u=t,a||(a=u),M((u+(i-a))*tt.speed)},d.seek=function(t){M(h(t))},d.pause=function(){d.paused=!0,m()},d.play=function(){d.paused&&(d.completed&&d.reset(),d.paused=!1,J.push(d),m(),K())},d.reverse=function(){p(),d.completed=!d.reversed,m()},d.restart=function(){d.reset(),d.play()},d.remove=function(t){et(H(t),d)},d.reset(),d.autoplay&&d.play(),d}function nt(t,n){for(var e=n.length;e--;)w(t,n[e].animatable.target)&&n.splice(e,1)}function et(t,n){var e=n.animations,r=n.children;nt(t,e);for(var a=r.length;a--;){var i=r[a],o=i.animations;nt(t,o),o.length||i.children.length||r.splice(a,1)}e.length||r.length||n.pause()}tt.version="3.2.1",tt.speed=1,tt.suspendWhenDocumentHidden=!0,tt.running=J,tt.remove=function(t){for(var n=H(t),e=J.length;e--;)et(n,J[e])},tt.get=B,tt.set=X,tt.convertPx=P,tt.path=function(t,n){var e=c.str(t)?y(t)[0]:t,r=n||100;return function(t){return{property:t,el:e,svg:V(e),totalLength:j(e)*(r/100)}}},tt.setDashoffset=function(t){var n=j(t);return t.setAttribute("stroke-dasharray",n),n},tt.stagger=function(t,n){void 0===n&&(n={});var e=n.direction||"normal",r=n.easing?g(n.easing):null,a=n.grid,i=n.axis,o=n.from||0,u="first"===o,s="center"===o,l="last"===o,f=c.arr(t),d=f?parseFloat(t[0]):parseFloat(t),p=f?parseFloat(t[1]):0,h=A(f?t[1]:t)||0,m=n.start||0+(f?d:0),v=[],y=0;return function(t,n,c){if(u&&(o=0),s&&(o=(c-1)/2),l&&(o=c-1),!v.length){for(var g=0;g<c;g++){if(a){var b=s?(a[0]-1)/2:o%a[0],x=s?(a[1]-1)/2:Math.floor(o/a[0]),M=b-g%a[0],w=x-Math.floor(g/a[0]),O=Math.sqrt(M*M+w*w);"x"===i&&(O=-M),"y"===i&&(O=-w),v.push(O)}else v.push(Math.abs(o-g));y=Math.max.apply(Math,v)}r&&(v=v.map((function(t){return r(t/y)*y}))),"reverse"===e&&(v=v.map((function(t){return i?t<0?-1*t:-t:Math.abs(y-t)})))}return m+(f?(p-d)/y:d)*(Math.round(100*v[n])/100)+h}},tt.timeline=function(t){void 0===t&&(t={});var e=tt(t);return e.duration=0,e.add=function(r,a){var i=J.indexOf(e),o=e.children;function u(t){t.passThrough=!0}i>-1&&J.splice(i,1);for(var s=0;s<o.length;s++)u(o[s]);var l=T(r,E(n,t));l.targets=l.targets||t.targets;var f=e.duration;l.autoplay=!1,l.direction=e.direction,l.timelineOffset=c.und(a)?f:F(a,f),u(e),e.seek(l.timelineOffset);var d=tt(l);u(d),o.push(d);var p=Y(o,t);return e.delay=p.delay,e.endDelay=p.endDelay,e.duration=p.duration,e.seek(0),e.reset(),e.autoplay&&e.play(),e},e},tt.easing=g,tt.penner=v,tt.random=function(t,n){return Math.floor(Math.random()*(n-t+1))+t};const rt=tt;var at=e(813);class it extends at.Component{alreadySeen=!1;textQuerySelector;constructor({container:t,position:n,options:e}){super(t,n),this.textQuerySelector=e&&e.textQuerySelector?e.textQuerySelector:".intro-text",this.fadeInAnimation=new ot}getIntroTexts(){return Array.from(this.container.querySelectorAll(`${this.textQuerySelector}`))}}class ot{async animate(t){return new Promise((n=>{let e=rt.timeline({easing:"easeOutExpo"});const r=t.getIntroTexts();if(r.length<1)return void n(e);const a=r.pop();r.forEach((n=>{this.animateTextElement({timeline:e,targetElement:n,component:t,animationDelay:0}).add({targets:n,opacity:{value:0,duration:+(n.getAttribute("fade-out-duration")||300).toString(),easing:"linear"}},`+=${(n.getAttribute("duration")||2e3).toString()}`)})),this.animateTextElement({timeline:e,targetElement:a,component:t,animationDelay:+(a.getAttribute("duration")||2e3).toString(),onComplete:()=>{setTimeout((()=>{$(t.container).fadeOut((()=>{n(e)}))}),2100)}})}))}animateTextElement({timeline:t,targetElement:n,component:e,onComplete:r,animationDelay:a}){return t.add({targets:n,opacity:{value:1,duration:+(n.getAttribute("fade-in-duration")||300).toString(),easing:"linear"},begin:()=>{this.switchActiveText(n,e)},complete:()=>{r&&r()}},`+=${(a||1).toString()}`)}hideTextElements(t){t.getIntroTexts().forEach((t=>t.style.display="none"))}switchActiveText(t,n){n.getIntroTexts().forEach((t=>t.style.display="none")),t.style.display="flex"}}})(),DialogComponent=r})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,