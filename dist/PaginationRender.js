var PaginationRender;(()=>{"use strict";var t={d:(e,n)=>{for(var i in n)t.o(n,i)&&!t.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:n[i]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};(()=>{t.r(e),t.d(e,{PaginationRender:()=>n});class n{_paginationManager;_containerElement;_listElement;_footerElement;_listItemTemplate;_emptyListTemplate;_headerOptions;_containerOptions;_footerOptions;_listContainerTag;constructor(t,e){this._paginationManager=t,[this._headerOptions,this._containerOptions,this._footerOptions]=[e?.headerOptions,e?.containerOptions,e?.footerOptions],this._listItemTemplate=e.setup.listItemTemplate,this._emptyListTemplate=e.setup.emptyListTemplate,this._listContainerTag=e.setup.listContainerTag||"ul",this._containerElement=document.querySelector(e.setup.containerQuerySelector)||document.createElement("div"),this._footerElement=this.renderFooter(),this._containerElement.insertAdjacentElement("beforeend",this._footerElement),this._listElement=this.renderListElement(),this._containerElement.insertAdjacentElement("afterbegin",this._listElement),this._containerOptions?.classList&&this._containerElement.classList.add(...this._containerOptions.classList.split(" "))}getButtonId(t){return`btnPagination${this._containerElement.id.capitalizeFirstLetter()}${t+1}`}getItemListId(){return`listPagination${this._containerElement.id.capitalizeFirstLetter()}`}getFooterId(){return`footerPagination${this._containerElement.id.capitalizeFirstLetter()}`}renderListElement(){if(document.getElementById(this.getItemListId()))return document.getElementById(this.getItemListId());const t=document.createElement(this._listContainerTag);return t.id=this.getItemListId(),t}resetFooter(){this._footerElement=this.renderFooter(),this._paginationManager.sourceString&&this._footerElement.insertAdjacentHTML("beforeend",`\n        <div class="contador-footer-fetch">\n          <span>Página: ${this._paginationManager.index+1}</span>\n          <span>Nº de Resultados: ${this._paginationManager.currentPageData?this._paginationManager.currentPageData.length:0}</span>\n        </div>`),this._containerElement.insertAdjacentElement("beforeend",this._footerElement)}async tryRenderCurrentPageList(){let t;return t=this._paginationManager.sourceString?await this._paginationManager.fetchCurrentPage():this._paginationManager.sourceArray.slice(this._paginationManager.index*this._paginationManager.amountPerPage,(this._paginationManager.index+1)*this._paginationManager.amountPerPage),!t||t.length<1?(this._listElement.insertAdjacentElement("beforeend",this._emptyListTemplate()),!1):(this._listElement.removeAllChildren(),t.forEach((t=>{const e=this._listItemTemplate(t);e.classList.add("pagination-list-item"),this._listElement.insertAdjacentElement("beforeend",e)})),this._paginationManager.currentPageData=t,!0)}renderFooter(){(this._footerElement||document.getElementById(this.getFooterId()))&&document.getElementById(this.getFooterId())?.remove();const t=document.createElement("div");t.id=this.getFooterId();const e=document.createElement("button"),n=document.createElement("button");return e.setAttribute("type","button"),n.setAttribute("type","button"),[e.innerText,n.innerText]=[this._footerOptions?.prevButtonText||"Previous",this._footerOptions?.nextButtonText||"Next"],e.classList.add("btn-pagination","btn-pagination-prev"),n.classList.add("btn-pagination","btn-pagination-next"),[e.onclick,n.onclick]=[()=>this._paginationManager.previous(),()=>this._paginationManager.next()],t.insertAdjacentElement("beforeend",e),this.makeFooterButtonList(t),t.insertAdjacentElement("beforeend",n),t}makeFooterButtonList(t){const e=document.createElement("div");e.classList.add("btn-pagination-inner-list"),t.insertAdjacentElement("beforeend",e),this._footerOptions?.truncateLength&&this._footerOptions?.truncateLength>0?[...Array(this._paginationManager.numPages).keys()].truncate(this._paginationManager.index,this._footerOptions.truncateLength,-1,this._footerOptions.truncateOptions).forEach((t=>e.insertAdjacentElement("beforeend",this.makeFooterButton(t)))):[...Array(this._paginationManager.numPages).keys()].forEach((t=>e.insertAdjacentElement("beforeend",this.makeFooterButton(t))))}makeFooterButton(t){const e=document.createElement("button");return e.id=this.getButtonId(t),e.classList.add("btn-pagination"),e.setAttribute("type","button"),t===this._paginationManager.index&&e.classList.add("active"),this._footerOptions?.buttonClassList&&e.classList.add(...this._footerOptions.buttonClassList.split(" ")),this._footerOptions?.truncateLength&&this._footerOptions?.truncateLength>0&&-1===t?e.classList.add("btn-pagination-decorator"):e.onclick=()=>this._paginationManager.peek(t),this._footerOptions?.buttonTextFormula?e.innerText=this._footerOptions.buttonTextFormula(t):e.innerText=-1!==t?`${t+1}`:this._footerOptions?.truncateDecorator||"...",e}}})(),PaginationRender=e})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,