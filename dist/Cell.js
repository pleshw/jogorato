var Cell;(()=>{"use strict";var t={d:(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};(()=>{t.r(e),t.d(e,{Cell:()=>n,CellAccessState:()=>a,CellFillState:()=>c,CellOpenState:()=>o});class n{_content;fillState;openState;accessState;onContentChange;constructor({content:t,fillState:e,openState:n,accessState:s,onContentChange:l}={}){this._content=t,this.onContentChange=l||(()=>{}),this.fillState=e||c.EMPTY,this.openState=n||o.ALL,this.accessState=s||a.FREE}clear(){this.fillState=c.EMPTY,this.openState=o.ALL,this.accessState=a.FREE}get content(){return this._content}copy(t){this._content=t._content,this.fillState=t.fillState,this.openState=t.openState,this.accessState=t.accessState,this.onContentChange=t.onContentChange}static copyTo(t,e){e._content=t._content,e.fillState=t.fillState,e.openState=t.openState,e.accessState=t.accessState,e.onContentChange=t.onContentChange}set content(t){this.onContentChange(this,t),this._content=t}}var o,a,c;!function(t){t[t.NONE=0]="NONE",t[t.TOP=1]="TOP",t[t.RIGHT=2]="RIGHT",t[t.BOTTOM=4]="BOTTOM",t[t.LEFT=8]="LEFT",t[t.TOP_RIGHT=16]="TOP_RIGHT",t[t.TOP_LEFT=32]="TOP_LEFT",t[t.BOTTOM_RIGHT=64]="BOTTOM_RIGHT",t[t.BOTTOM_LEFT=128]="BOTTOM_LEFT",t[t.ALL=255]="ALL"}(o||(o={})),function(t){t[t.FREE=0]="FREE",t[t.BLOCKED=1]="BLOCKED",t[t.VISITED=2]="VISITED"}(a||(a={})),function(t){t[t.EMPTY=0]="EMPTY",t[t.FILLED=1]="FILLED",t[t.FULL=2]="FULL"}(c||(c={}))})(),Cell=e})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2VsbC5qcyIsIm1hcHBpbmdzIjoiNEJBQ0EsSUFBSUEsRUFBc0IsQ0NBMUJBLEVBQXdCLENBQUNDLEVBQVNDLEtBQ2pDLElBQUksSUFBSUMsS0FBT0QsRUFDWEYsRUFBb0JJLEVBQUVGLEVBQVlDLEtBQVNILEVBQW9CSSxFQUFFSCxFQUFTRSxJQUM1RUUsT0FBT0MsZUFBZUwsRUFBU0UsRUFBSyxDQUFFSSxZQUFZLEVBQU1DLElBQUtOLEVBQVdDLElBRTFFLEVDTkRILEVBQXdCLENBQUNTLEVBQUtDLElBQVVMLE9BQU9NLFVBQVVDLGVBQWVDLEtBQUtKLEVBQUtDLEdDQ2xGVixFQUF5QkMsSUFDSCxvQkFBWGEsUUFBMEJBLE9BQU9DLGFBQzFDVixPQUFPQyxlQUFlTCxFQUFTYSxPQUFPQyxZQUFhLENBQUVDLE1BQU8sV0FFN0RYLE9BQU9DLGVBQWVMLEVBQVMsYUFBYyxDQUFFZSxPQUFPLEdBQU8sRyxvR0NMdkQsTUFBTUMsRUFDSEMsU0FFREMsVUFDQUMsVUFDQUMsWUFFQUMsZ0JBRVAsV0FBQUMsRUFBYSxRQUFFQyxFQUFPLFVBQUVMLEVBQVMsVUFBRUMsRUFBUyxZQUFFQyxFQUFXLGdCQUFFQyxHQUFtTSxDQUFDLEdBQzdQRyxLQUFLUCxTQUFXTSxFQUVoQkMsS0FBS0gsZ0JBQWtCQSxHQUFtQixNQUFXLEdBQ3JERyxLQUFLTixVQUFZQSxHQUFhTyxFQUFjQyxNQUM1Q0YsS0FBS0wsVUFBWUEsR0FBYVEsRUFBY0MsSUFDNUNKLEtBQUtKLFlBQWNBLEdBQWVTLEVBQWdCQyxJQUNwRCxDQUVPLEtBQUFDLEdBQ0xQLEtBQUtOLFVBQVlPLEVBQWNDLE1BQy9CRixLQUFLTCxVQUFZUSxFQUFjQyxJQUMvQkosS0FBS0osWUFBY1MsRUFBZ0JDLElBQ3JDLENBRUEsV0FBSVAsR0FDRixPQUFPQyxLQUFLUCxRQUNkLENBRU8sSUFBQWUsQ0FBTUMsR0FDWFQsS0FBS1AsU0FBV2dCLEVBQVFoQixTQUN4Qk8sS0FBS04sVUFBWWUsRUFBUWYsVUFDekJNLEtBQUtMLFVBQVljLEVBQVFkLFVBQ3pCSyxLQUFLSixZQUFjYSxFQUFRYixZQUMzQkksS0FBS0gsZ0JBQWtCWSxFQUFRWixlQUNqQyxDQUVPLGFBQU9hLENBQVdDLEVBQXNCRixHQUM3Q0EsRUFBUWhCLFNBQVdrQixFQUFZbEIsU0FDL0JnQixFQUFRZixVQUFZaUIsRUFBWWpCLFVBQ2hDZSxFQUFRZCxVQUFZZ0IsRUFBWWhCLFVBQ2hDYyxFQUFRYixZQUFjZSxFQUFZZixZQUNsQ2EsRUFBUVosZ0JBQWtCYyxFQUFZZCxlQUN4QyxDQUVBLFdBQUlFLENBQVNhLEdBQ1haLEtBQUtILGdCQUFpQkcsS0FBTVksR0FFNUJaLEtBQUtQLFNBQVdtQixDQUNsQixFQXFCRixJQUFZVCxFQWFBRSxFQUVBSixHQWZaLFNBQVlFLEdBQ1YsbUJBQ0EsaUJBQ0EscUJBQ0EsdUJBQ0EsbUJBQ0EsOEJBQ0EsNEJBQ0Esb0NBQ0EsbUNBQ0Esa0JBQ0QsQ0FYRCxDQUFZQSxJQUFBQSxFQUFhLEtBYXpCLFNBQVlFLEdBQWtCLG1CQUFNLHlCQUFTLHdCQUFTLENBQXRELENBQVlBLElBQUFBLEVBQWUsS0FFM0IsU0FBWUosR0FBZ0IscUJBQU8sdUJBQVEsa0JBQU0sQ0FBakQsQ0FBWUEsSUFBQUEsRUFBYSxJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovLy93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vL3dlYnBhY2svcnVudGltZS9tYWtlIG5hbWVzcGFjZSBvYmplY3QiLCJ3ZWJwYWNrOi8vLy4vQ2VsbC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGUgcmVxdWlyZSBzY29wZVxudmFyIF9fd2VicGFja19yZXF1aXJlX18gPSB7fTtcblxuIiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsIi8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uciA9IChleHBvcnRzKSA9PiB7XG5cdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuXHR9XG5cdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG59OyIsImV4cG9ydCBjbGFzcyBDZWxsPFQ+IGltcGxlbWVudHMgSUNlbGwge1xyXG4gIHByaXZhdGUgX2NvbnRlbnQ/OiBUO1xyXG5cclxuICBwdWJsaWMgZmlsbFN0YXRlOiBDZWxsRmlsbFN0YXRlO1xyXG4gIHB1YmxpYyBvcGVuU3RhdGU6IENlbGxPcGVuU3RhdGU7XHJcbiAgcHVibGljIGFjY2Vzc1N0YXRlOiBDZWxsQWNjZXNzU3RhdGU7XHJcblxyXG4gIHB1YmxpYyBvbkNvbnRlbnRDaGFuZ2U6ICggY2VsbDogQ2VsbDxUPiwgbmV3Q29udGVudDogVCB8IHVuZGVmaW5lZCApID0+IHZvaWQ7XHJcblxyXG4gIGNvbnN0cnVjdG9yKCB7IGNvbnRlbnQsIGZpbGxTdGF0ZSwgb3BlblN0YXRlLCBhY2Nlc3NTdGF0ZSwgb25Db250ZW50Q2hhbmdlIH06IHsgY29udGVudD86IFQ7IGZpbGxTdGF0ZT86IENlbGxGaWxsU3RhdGU7IG9wZW5TdGF0ZT86IENlbGxPcGVuU3RhdGU7IGFjY2Vzc1N0YXRlPzogQ2VsbEFjY2Vzc1N0YXRlOyBvbkNvbnRlbnRDaGFuZ2U/OiAoIGNlbGw6IENlbGw8VD4sIG5ld0NvbnRlbnQ6IFQgfCB1bmRlZmluZWQgKSA9PiB2b2lkOyB9ID0ge30gKSB7XHJcbiAgICB0aGlzLl9jb250ZW50ID0gY29udGVudDtcclxuXHJcbiAgICB0aGlzLm9uQ29udGVudENoYW5nZSA9IG9uQ29udGVudENoYW5nZSB8fCAoICgpID0+IHsgfSApO1xyXG4gICAgdGhpcy5maWxsU3RhdGUgPSBmaWxsU3RhdGUgfHwgQ2VsbEZpbGxTdGF0ZS5FTVBUWTtcclxuICAgIHRoaXMub3BlblN0YXRlID0gb3BlblN0YXRlIHx8IENlbGxPcGVuU3RhdGUuQUxMO1xyXG4gICAgdGhpcy5hY2Nlc3NTdGF0ZSA9IGFjY2Vzc1N0YXRlIHx8IENlbGxBY2Nlc3NTdGF0ZS5GUkVFO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGNsZWFyKCk6IHZvaWQge1xyXG4gICAgdGhpcy5maWxsU3RhdGUgPSBDZWxsRmlsbFN0YXRlLkVNUFRZO1xyXG4gICAgdGhpcy5vcGVuU3RhdGUgPSBDZWxsT3BlblN0YXRlLkFMTDtcclxuICAgIHRoaXMuYWNjZXNzU3RhdGUgPSBDZWxsQWNjZXNzU3RhdGUuRlJFRTtcclxuICB9XHJcblxyXG4gIGdldCBjb250ZW50KCk6IFQgfCB1bmRlZmluZWQge1xyXG4gICAgcmV0dXJuIHRoaXMuX2NvbnRlbnQ7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgY29weSggbmV3Q2VsbDogQ2VsbDxUPiApIHtcclxuICAgIHRoaXMuX2NvbnRlbnQgPSBuZXdDZWxsLl9jb250ZW50O1xyXG4gICAgdGhpcy5maWxsU3RhdGUgPSBuZXdDZWxsLmZpbGxTdGF0ZTtcclxuICAgIHRoaXMub3BlblN0YXRlID0gbmV3Q2VsbC5vcGVuU3RhdGU7XHJcbiAgICB0aGlzLmFjY2Vzc1N0YXRlID0gbmV3Q2VsbC5hY2Nlc3NTdGF0ZTtcclxuICAgIHRoaXMub25Db250ZW50Q2hhbmdlID0gbmV3Q2VsbC5vbkNvbnRlbnRDaGFuZ2U7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgc3RhdGljIGNvcHlUbzxUPiggcmVwbGFjZVdpdGg6IENlbGw8VD4sIG5ld0NlbGw6IENlbGw8VD4gKSB7XHJcbiAgICBuZXdDZWxsLl9jb250ZW50ID0gcmVwbGFjZVdpdGguX2NvbnRlbnQ7XHJcbiAgICBuZXdDZWxsLmZpbGxTdGF0ZSA9IHJlcGxhY2VXaXRoLmZpbGxTdGF0ZTtcclxuICAgIG5ld0NlbGwub3BlblN0YXRlID0gcmVwbGFjZVdpdGgub3BlblN0YXRlO1xyXG4gICAgbmV3Q2VsbC5hY2Nlc3NTdGF0ZSA9IHJlcGxhY2VXaXRoLmFjY2Vzc1N0YXRlO1xyXG4gICAgbmV3Q2VsbC5vbkNvbnRlbnRDaGFuZ2UgPSByZXBsYWNlV2l0aC5vbkNvbnRlbnRDaGFuZ2U7XHJcbiAgfVxyXG5cclxuICBzZXQgY29udGVudCggbmV3Q29udGVudDogVCB8IHVuZGVmaW5lZCApIHtcclxuICAgIHRoaXMub25Db250ZW50Q2hhbmdlKCB0aGlzLCBuZXdDb250ZW50ICk7XHJcblxyXG4gICAgdGhpcy5fY29udGVudCA9IG5ld0NvbnRlbnQ7XHJcbiAgfVxyXG59XHJcblxyXG5cclxuaW50ZXJmYWNlIElDZWxsIHtcclxuICBmaWxsU3RhdGU6IENlbGxGaWxsU3RhdGU7XHJcbiAgb3BlblN0YXRlOiBDZWxsT3BlblN0YXRlO1xyXG4gIGFjY2Vzc1N0YXRlOiBDZWxsQWNjZXNzU3RhdGU7XHJcbn1cclxuXHJcblxyXG4vLy9BZGljaW9uYW5kbyBtw7psdGlwbG9zIHZhbG9yZXNcclxuLy8vICAgbGV0IHRvcFJpZ2h0ID0gQ2VsbE9wZW5TdGF0ZS5UT1AgfCBDZWxsT3BlblN0YXRlLlJJR0hUXHJcbi8vLyAgICh0b3BSaWdodCAmIENlbGxPcGVuU3RhdGUuVE9QKSA9PT0gQ2VsbE9wZW5TdGF0ZS5UT1BcclxuLy8vICAgICAodG9wUmlnaHQgJiBDZWxsT3BlblN0YXRlLlJJR0hUKSA9PT0gQ2VsbE9wZW5TdGF0ZS5UT1BcclxuLy8vQWRpY2lvbmFuZG8gdW0gdmFsb3IgZGVwb2lzIGRlIGF0cmlidWlyXHJcbi8vLyAgIHRvcFJpZ2h0IHw9IENlbGxPcGVuU3RhdGUuTEVGVFxyXG4vLy8gICAgICh0b3BSaWdodCAmIENlbGxPcGVuU3RhdGUuUklHSFQpID09PSBDZWxsT3BlblN0YXRlLkxFRlRcclxuLy8vUmVtb3ZlbmRvIHVtIHZhbG9yIGRlcG9pcyBkZSBhdHJpYnVpclxyXG4vLy8gICB0b3BSaWdodCAmPSB+Q2VsbE9wZW5TdGF0ZS5SSUdIVFxyXG4vLy8gICAgICh0b3BSaWdodCAmIENlbGxPcGVuU3RhdGUuUklHSFQpICE9PSBDZWxsT3BlblN0YXRlLlJJR0hUXHJcbmV4cG9ydCBlbnVtIENlbGxPcGVuU3RhdGUge1xyXG4gIE5PTkUgPSAwLFxyXG4gIFRPUCA9IDEgPDwgMCxcclxuICBSSUdIVCA9IDEgPDwgMSxcclxuICBCT1RUT00gPSAxIDw8IDIsXHJcbiAgTEVGVCA9IDEgPDwgMyxcclxuICBUT1BfUklHSFQgPSAxIDw8IDQsXHJcbiAgVE9QX0xFRlQgPSAxIDw8IDUsXHJcbiAgQk9UVE9NX1JJR0hUID0gMSA8PCA2LFxyXG4gIEJPVFRPTV9MRUZUID0gMSA8PCA3LFxyXG4gIEFMTCA9IH4oIH4wIDw8IDggKVxyXG59XHJcblxyXG5leHBvcnQgZW51bSBDZWxsQWNjZXNzU3RhdGUgeyBGUkVFLCBCTE9DS0VELCBWSVNJVEVEIH1cclxuXHJcbmV4cG9ydCBlbnVtIENlbGxGaWxsU3RhdGUgeyBFTVBUWSwgRklMTEVELCBGVUxMIH0iXSwibmFtZXMiOlsiX193ZWJwYWNrX3JlcXVpcmVfXyIsImV4cG9ydHMiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsIm9iaiIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwiQ2VsbCIsIl9jb250ZW50IiwiZmlsbFN0YXRlIiwib3BlblN0YXRlIiwiYWNjZXNzU3RhdGUiLCJvbkNvbnRlbnRDaGFuZ2UiLCJjb25zdHJ1Y3RvciIsImNvbnRlbnQiLCJ0aGlzIiwiQ2VsbEZpbGxTdGF0ZSIsIkVNUFRZIiwiQ2VsbE9wZW5TdGF0ZSIsIkFMTCIsIkNlbGxBY2Nlc3NTdGF0ZSIsIkZSRUUiLCJjbGVhciIsImNvcHkiLCJuZXdDZWxsIiwiY29weVRvIiwicmVwbGFjZVdpdGgiLCJuZXdDb250ZW50Il0sInNvdXJjZVJvb3QiOiIifQ==