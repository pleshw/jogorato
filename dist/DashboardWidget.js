var DashboardWidget;(()=>{"use strict";var t={d:(e,n)=>{for(var a in n)t.o(n,a)&&!t.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:n[a]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};(()=>{t.r(e),t.d(e,{DashboardWidget:()=>n});class n{widgetId;templateId;innerHTML;name;group;title;x;y;w;h;maxW;minW;maxH;minH;backgroundColor;element;constructor(t){this.widgetId=t.widgetId,this.templateId=t.templateId,this.innerHTML=t.innerHTML,this.name=t.name,this.group=t.group,this.title=t.title||t.name,this.x=void 0!==t.x&&t.x>0?t.x:0,this.y=void 0!==t.y&&t.y>0?t.y:0,this.w=t.w||1,this.h=t.h||1,this.maxW=t.maxW||1,this.minW=t.minW||1,this.maxH=t.maxH||1,this.minH=t.minH||1,this.backgroundColor=t.backgroundColor||"black",this.element=document.createElement("div"),this.element.innerHTML=this.getHTMLTemplate(),this.element.classList.add("grid-stack-item")}appendTo(t){return t.addWidget(this.element,{x:this.x,y:this.y,w:this.w,h:this.h,minW:this.minW,maxW:this.maxW,minH:this.minH,maxH:this.maxH,id:this.widgetId})}getHTMLTemplate(){return a.getWidgetHTMLTemplate(this).trim()}}class a{static getWidgetHTMLTemplate(t){return`\n      <div class="card grid-stack-item-content" data-template-grupo='${t.group}' data-template-id="${t.templateId}" style="background-color: ${t.backgroundColor};" data-dashboard-conf="${t.backgroundColor}">\n        ${a.widgetHeader(t)}\n        ${a.widgetBody(t)}\n      </div>\n    `}static widgetHeader(t){return`\n      <div class="card-header row justify-content-between" style="background-color: ${t.backgroundColor};" data-template-grupo='${t.group}' data-template-id="${t.templateId}" data-dashboard-conf="${t.backgroundColor}">\n        <h4 class="col-11" style="color:white; text-align:center;" data-widget-titulo=${t.title}>${t.title}</h4> \n        ${a.configMenuDropdown(t)}\n      </div>\n    `}static widgetBody(t){return`\n      <div class="card-body w-100 h-100 p-0" data-template-grupo='${t.group}' data-template-id="${t.templateId}" data-dashboard-conf="${t.backgroundColor}">\n        ${a.widgetPanel(t)}\n      </div>\n    `}static widgetPanel(t){return`\n      <div class="w-100 h-100  p-4" style="background-color: ${t.backgroundColor};" data-template-id="${t.templateId}" data-widget-id="${t.widgetId}">\n      <div id="${t.templateId}">\n          ${t.innerHTML}\n      </div>\n    `}static configMenuDropdown(t){return`\n      <div style="z-index: 1;" class="row dropdown col-1 p-0 m-0 justify-content-center align-items-center">\n          ${a.configMenuDropdownOpenButton(t)}\n          ${a.configMenuDropdownList(t)}\n      </div>\n    `}static configMenuDropdownOpenButton(t){return`\n      <button id="dropdownMenu_${t.templateId}"  class="btn dropdown-toggle text-white border-0 p-0" type="button" data-bs-toggle="dropdown"></button>\n    `}static configMenuDropdownList(t){return`\n      <ul class="dropdown-menu" style="left: -140px;">\n          <li>\n            <a class="dropdown-item remove-widget" href="#">Excluir</a>\n          </li>\n          <li>\n            <a class="dropdown-item configurar-widget" data-bs-toggle="modal" data-bs-target="#dashboard-widgets-modal-config" href="" onClick="${this.getLoadWidgetFunctionTemplate(t)}">Configuração\n            </a>\n          </li>\n      </ul>\n    `}static getLoadWidgetFunctionTemplate(t){return`carregarWidgetsPeloId( '${t.name}', '${t.templateId}' )`}}})(),DashboardWidget=e})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,