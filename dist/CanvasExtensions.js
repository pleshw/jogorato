var CanvasExtensions;(()=>{"use strict";CanvasRenderingContext2D.prototype.extensionFunction=function(t,e,n,r,o,s,i,l,a){var h,d=(t=(t=t.replace(/[\n]/g," \n ")).replace(/\r/g,"")).split(/[ ]+/),x=this.measureText(" ").width,g=[],p=0,f=0;g[p]={},g[p].Words=[];let u=0;for(;u<d.length;){var W=d[u];if("\n"==W)g[p].EndParagraph=!0,f=0,g[++p]={},g[p].Words=[],u++;else if((h={}).l=this.measureText(W).width,0===f){for(;h.l>r;)W=W.slice(0,W.length-1),h.l=this.measureText(W).width;if(""===W)return;h.word=W,g[p].Words.push(h),f=h.l,W!=d[u]?d[u]=d[u].slice(W.length,d[u].length):u++}else f+x+h.l>r?(g[p].EndParagraph=!1,f=0,g[++p]={},g[p].Words=[]):(h.word=W,g[p].Words.push(h),f+=x+h.l,u++)}0===f&&g[p].pop(),g[p].EndParagraph=!0;for(var c,v=l*g.length;v>o;)g.pop(),v=l*g.length;c="bottom"==i?n+o-v+l:"center"==i?n+o/2-v/2+l:n+l;var T=this.textAlign;for(var C in this.textAlign="left",g){var w,E,k=0;for(h in g[C].Words)k+=g[C].Words[h].l;for(h in"center"==s?(E=x,w=e+r/2-(k+x*(g[C].Words.length-1))/2):"justify"!=s||g[C].EndParagraph?"right"==s?(w=e+r-(k+x*(g[C].Words.length-1)),E=x):(w=e,E=x):(w=e,E=(r-k)/(g[C].Words.length-1)),g[C].Words)"fillText"==a?this.fillText(g[C].Words[h].word,w,c):"strokeText"==a&&this.strokeText(g[C].Words[h].word,w,c),w+=g[C].Words[h].l+E;c+=l}this.textAlign=T},CanvasRenderingContext2D.prototype.extensionFillText=function(t,e,n,r,o,s,i,l){this.extensionFunction(t,e,n,r,o,i,s,l,"fillText")},CanvasRenderingContext2D.prototype.extensionStrokeText=function(t,e,n,r,o,s,i,l){this.extensionFunction(t,e,n,r,o,i,s,l,"strokeText")},CanvasExtensions={}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,